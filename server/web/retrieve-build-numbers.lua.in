-- retrieve-build-numbers.lua - fetch current or new build-numbers -*- Lua -*-
--
-- method: POST
--
-- body: result-lines of the form "<resultname> <buildid*> <buildnumber>"
--
-- query string:
--
--   project=<projectname>
--
-- response: same format as request body, with updated or same contents


local cl = os.getenv("CONTENT_LENGTH")

local function fail(msg)
  print("Status: 500 Internal Server Error\n\n" .. msg)
  os.exit(1)
end

if not cl then fail("no content-length") end

local function readbn(str)
  local t = {}
  for ln in string.gmatch(str, "[^\n]*\n") do
    if not string.match(ln, "^%s*$") then
      local res, bid, status, num = 
	string.match(ln, "([-%w_]+)%s+(%x+)%s+(%S+)%s+(%d+)")
      if res then
	t[ res ] = { id = bid, num = num, status = status }
      else
	fail("invalid request line: " .. ln)
      end
    end
  end
  return t
end

local function writebn(f, t)
  for k, v in pairs(t) do
    f:write(k, " ", v.id, " ok ", v.num, "\n")
  end
end

local bytes = tonumber(cl)

if bytes == 0 then
  fail("zero content-length")
end

local req = io.read(bytes) or fail("empty request")
local usernums = readbn(req)
local query = {}

for k, v in string.gmatch(os.getenv("QUERY_STRING"), "(%w+)=([-%w_]+)") do
  query[ k ] = v
end

if not query.project then fail("no project given") end

local logdir = "@LOGDIR@/" .. query.project
local numfile = logdir .. "/build-numbers"

os.execute("mkdir -p '" .. logdir .. "'")

local currentnums
local f, msg = io.open(numfile, "r")
local changed = not f

if not f then
  currentnums = usernums
else
  local i = f:read("*a")
  if not i then
    fail("empty request")
  end
  f:close()
  currentnums = readbn(i)
end

for k, v in pairs(usernums) do
  local r = currentnums[ k ]
  if r then
    if r.id == v.id and v.status ~= "force" then
      v.num = r.num
    else
      r.num = r.num + 1
      r.id = v.id
      changed = true
      v.num = r.num
    end
  else
    currentnums[ k ] = v
  end
end

if changed then
  f, msg = io.open(numfile, "w")
  if not f then
    fail("can not write `" .. numfile .. "': " .. msg)
  end
  writebn(f, currentnums)
  f:close()
end

print("Content-type: text/plain\n")

writebn(io.stdout, usernums)
