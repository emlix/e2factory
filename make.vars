# make.vars						-*- makefile -*-

# version string
NAME = e2factory
MAJOR = 2
MINOR = 3
PATCHLEVEL = 1
EXTRAVERSION = rc1
ifdef EXTRAVERSION
  VERSION = $(MAJOR).$(MINOR).$(PATCHLEVEL)$(EXTRAVERSION)
else
  VERSION = $(MAJOR).$(MINOR).$(PATCHLEVEL)
endif
TAG = $(NAME)-$(VERSION)

COMMIT = $(shell GIT_DIR=$(TOPLEVEL)/.git git describe --tags 2>/dev/null)
ifeq ($(COMMIT),)
  VERSIONSTRING = $(TAG)
else
  VERSIONSTRING = $(COMMIT)
endif

# list the latest one first
SYNTAX = 2_3_0 2_2_2 2_2_0

# when creating a project a current set of local tools is requested
DEFAULT_LOCAL_BRANCH = master
DEFAULT_LOCAL_TAG = $(TAG)
export DEFAULT_LOCAL_BRANCH DEFAULT_LOCAL_TAG

DETECT_TOOL = $(TOPLEVEL)/scripts/detect_tool

PROJECTDIR ?= $(shell cd $(TOPLEVEL);scripts/e2-locate-project-root 2>/dev/null)
E2DATA = /mnt/e2data
export E2DATA PROJECTDIR

DESTDIR =
PREFIX = /usr/local
BINDIR = $(PREFIX)/bin
LIBDIR = $(PREFIX)/lib/e2
LIBEXECDIR = $(PREFIX)/libexec/e2
INCDIR = $(PREFIX)/include/e2
SHAREDIR = $(PREFIX)/share
LOCALSTATEDIR = /var/lib/e2factory
SYSCONFDIR = /etc/e2
MANDIR = $(SHAREDIR)/man
DOCDIR = $(SHAREDIR)/doc/e2
TOOLDIR = $(LIBEXECDIR)/tools
export PREFIX BINDIR LIBDIR INCDIR MANDIR TOOLDIR LIBEXECDIR LOCALSTATEDIR 
export SYSCONFDIR

LOCALPREFIX = $(PROJECTDIR)/.e2
LOCALBINDIR = $(LOCALPREFIX)/bin
LOCALLIBDIR = $(LOCALPREFIX)/lib/e2
LOCALMAKDIR = $(LOCALPREFIX)/lib/make
export LOCALPREFIX LOCALBINDIR LOCALLIBDIR LOCALMAKDIR

ARCH		  = $(shell uname -m)
LUA_VERSION       = 5.1.3
LUA_ALL_VERSIONS  = 5.1.2 5.1.3
LUA               = $(LIBEXECDIR)/e2-lua-$(LUA_VERSION)
LUAC              = $(LIBEXECDIR)/e2-luac-$(LUA_VERSION)
ifdef LUA_UNPACK_PATH
BUILD_LUAC        = $(LUA_UNPACK_PATH)/lua-$(LUA_VERSION)/src/luac
BUILD_LUA_CPPFLAGS = -I $(LUA_UNPACK_PATH)/lua-$(LUA_VERSION)/src
else
BUILD_LUAC        = $(TOPLEVEL)/lua/lua-$(LUA_VERSION)/src/luac
BUILD_LUA_CPPFLAGS = -I $(TOPLEVEL)/lua/lua-$(LUA_VERSION)/src
endif
LUA_CPPFLAGS      = -I $(INCDIR)/lua-$(LUA_VERSION)
UPSTREAM          = $(E2DATA)/upstream
BASE_PROJECT_PATH = $(E2DATA)/projects/emlix/emlix-base-project/proj/emlix-base-project.git
BINARY_STORE      = $(E2DATA)/projects/emlix/e2/files
LUA_SOURCE_PATH   ?= $(TOPLEVEL)
LUA_UNPACK_PATH   ?= .

export LUA_VERSION UPSTREAM BASE_PROJECT_PATH LUAC BUILD_LUAC ARCH BINARY_STORE

CC       = gcc
CFLAGS   = -g -Wall
CPPFLAGS = -DBINDIR="\"$(BINDIR)\"" \
	   -DLIBDIR="\"$(LIBDIR)\"" \
	   -DLIBEXECDIR="\"$(LIBEXECDIR)\"" \
	   -DINCDIR="\"$(INCDIR)\"" \
	   -DMANDIR="\"$(MANDIR)\"" \
	   -DTOOLDIR="\"$(TOOLDIR)\""

LDFLAGS  =

export CC CFLAGS CPPFLAGS LDFLAGS

# build-time detection for tools used by the setuid root code
ENV_TOOL    = $(shell $(DETECT_TOOL) env)
CHROOT_TOOL = $(shell $(DETECT_TOOL) chroot)
TAR_TOOL    = $(shell $(DETECT_TOOL) tar)
CHOWN_TOOL  = $(shell $(DETECT_TOOL) chown)
RM_TOOL     = $(shell $(DETECT_TOOL) rm)
export ENV_TOOL TAR_TOOL CHROOT_TOOL TAR_TOOL CHOWN_TOOL RM_TOOL

E2_SU_CFLAGS =	-D CHROOT_TOOL="\"$(CHROOT_TOOL)\""	\
		-D TAR_TOOL="\"$(TAR_TOOL)\""		\
		-D CHOWN_TOOL="\"$(CHOWN_TOOL)\""	\
		-D RM_TOOL="\"$(RM_TOOL)\""

E2_GROUP = ebs
export E2_GROUP

# vim: ft=make
