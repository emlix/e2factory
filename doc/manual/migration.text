Migrating to newer versions of e2factory
-----------------------------

### Migrating from e2factory-2.3.5 to e2factory-2.3.6 ###

*   configure a list of results to be deployed in release mode in the
    `deploy_results` attribute in the project configuration according to
    [project](project.html).
*   optional: consider moving environment configuration from `proj/env`
    to source- or result configuration.
*   change the syntax version to `2_3_6` to acknowledge that you changed
    the configuration.

### Migrating from e2factory-2.3.4 to e2factory-2.3.5 ###

*   No changes required

### Migrating from e2factory-2.3.3 to e2factory-2.3.4 ###

*   The file `.e2/version` was maintained with the project configuration
    in versions up to 2.3.3. This is no longer the case now.

Remove the `.e2/version` file from the repository

    $ git rm .e2/version
    $ git commit

*   A file `.e2/global-version` is automatically created on project
    checkout, using the server side project descriptor file.
    This file must not be checked into the project repository.
    If it is not possible to re-checkout the project, copy the file
    `.e2/version` to `.e2/global-version` manually before removing
    it, or fetching the update from upstream.

### Migrating from e2factory-2.3.2 to e2factory-2.3.3 ###

*   No changes required

### Migrating from e2factory-2.3.1 to e2factory-2.3.2 ###

*   change the chroot configuration format according to the documentation
    [chroot](chroot.html)
*   change the licence configuration format according to the documentation
    [licences](licences.html)
*   in the chroot-, licence-, files source configuration the sha1 checksum
    must be configured using the `sha1` attribute for files not located
    on the `'.'` server.
*   change the syntax version to `2_3_2` to acknowledge that you changed
    the configuration.

Change the syntax compatibility version and the version of your local tools

    $ echo '2_3_2' >.e2/syntax
    $ echo 'master e2factory-2.3.2' >.e2/e2version

*   Do not forget to commit your changes.

### Migrating from e2-2.1 to e2-2.2.x or up to e2factory-2.3.1 ###

#### Prerequisites: Cleanup the project state: ####

*   all project members push valuable changes to sources or the project
    repository to the server
*   all project members except the one doing the migration delete their
    full project working copies.
    They become unusable during the migration to e2-2.2.x.
*   be sure the project is in a state that builds without errors
*   tag the project repository
*   install e2-2.2.x global tools

#### Migrate the project, 1st part ####

*   switch the project to use e2-2.2.x local tools:
    Change .e2/e2version to hold 'e2-2.2 e2-2.2.0', commit and push
*   the old project checkout is no longer used now. Remove it.

The commands:

    $ echo 'e2-2.2 e2-2.2.0' >.e2/e2version
    $ git commit -m 'switch the project to use e2-2.2.0' .e2/e2version
    $ git push

#### Migrate the project 2nd part ####

*   checkout the project again. That will install the e2-2.2.x local tools
*   run e2-build. It will complain about .e2/syntax not matching the local
    tools.
*   Create the .e2/syntax file holding the syntax identifier string
    mentioned by e2-build (Something like `2_2_x`).
*   Now the configuration syntax itself must be fixed to match the syntax
    identifier.

The commands:

    $ e2-fetch-project ...
    $ cd ...
    $ e2-build
    $ echo '2_2_0' >.e2/syntax
    $ git add .e2/syntax

#### Migrate the project 3rd part ####

Some details of the project configuration change. Follow the steps below
to change your project configuration to fit e2-2.2.x.
Please `git add` all of your changed files immediately, to create a clean
commit once the migration is successful.

sed scripts listed in the *Useful Commands* section may help you doing the
work.

*   create `proj/config`
    + see [project](project.html)
    + `proj/name` and `proj/default-results` become obsolete. Remove them.
*   fix the chroot configuration (proj/chroot)
    +   see [chroot](chroot.html)
*   fix the licence configuration (proj/licences)
    +   see [licences](licences.html)
*   fix the source configuration files (src/*/config)
    +   see [sources](sources.html)
    +   rename the `name` attribute to `location` for *files* sources
    +   the `server` attribute can now be specified once on the top-level
        and is inherited by each single file, for *files* sources
    +   rename the `remote` attribute to `location` for git sources
    +   the `working` attribute for all scm sources has a builtin default
        now: `in/<sourcename>`. No need to specify it any more.
*   fix the result configuration (res/*/config)
    +   see [results](results.html)
    +   the `files` attribute was removed. The tools will only warn, but
        work anyway.

#### Finish the migration ####

*   fetch sources and build with all warnings enabled
*   read the warnings and error messages

The commands:

    $ e2-fetch-sources
    $ e2-build --Wall

The basic migration is done now. Create the commit now and push:

    $ git commit -m 'migrate to e2-2.2.0'
    $ git push

#### Useful commands ####

Be careful when using these commands. They will do in many cases, but they
are not reliable. They will even do nonsense, if the patterns match in the
wrong places. Review the resulting diff before committing changes!

    $ sed -i s,'group=','name=', proj/chroot
    $ sed -i s,'group =','name =', proj/chroot
    $ sed -i s,'name =','location =', src/*/config
    $ sed -i s,'name=','location=', src/*/config
    $ sed -i s,'remote =','location =', src/*/config
    $ sed -i s,'remote=','location=', src/*/config

prev [release](release.html)
next [faq](faq.html)
