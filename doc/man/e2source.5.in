.\" Man page for e2source
.\"
.\" (c)2007-2022 emlix GmbH
.\"
.TH e2source 5 "Jul 5, 2022" "@VERSION@"

.SH NAME
src/*/config \- source configuration files of an e2factory project

.SH DESCRIPTION
The mandatory files \fBsrc/<dir>/config\fR configure sources to be used when building results.
The name of the directory \fB<dir>\fR defines the source-name.
In case of sub-directories, all directories below \fBsrc/\fR do form the source-name separated by dots.
.br
e.g.:
\fBsrc/<name1>/<name2>/config\fR leads to source name: \fB<name1>.<name2>\fR.
.br
Sources could either refer to files (including archives), Git, Subversion, and
CVS repositories, or other special sources.

.SH STRUCTURE (file)
The files have following structure, if referring to files:
.nf

e2source {
  licences = {
    "<string>",
    ...
  },
  env = {
    ["<variable name>"] = "<variable value>",
    ...
  },
  type = "file",
  server = "<string>",
  file = {
    {
      licences = {"<string>", ...},
      server = "<string>",
      location = "<string>",
      sha1 = "da39a3ee5e6b4b0d3255bfef95601890afd80709",
      sha256 = "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855",
      -- hashupdate = true,
      copy = "<string>",
      patch = "<string>",
      unpack = "<string>",
    },
    ...
  },
}
.fi

.SH KEYS (file)

.TP
.BR licences
(on source level)
.br
Type: Table of strings
.br
Name(s) of the licence(s) that apply to the source.

.TP
.BR env
Type: Table
.br
List of environment variables and values separated by \fB=\fR. The variables are available during the build process.

.TP
.BR type
Type: String
.br
Defines the type of the source. In case of a file source always \fBfiles\fR, defaults to \fBfiles\fR if
omitted.

.TP
.BR server
(on source level)
.br
Type: String
.br
Name of the server the source file is stored on.

.TP
.BR file
Type: Table
.br
List of files belonging to the source.

.TP
.BR licences
(on file level)
.br
Type: Table of strings
.br
Name of the licence(s) that apply to this specific file, defaults to
licences on source level, if omitted.

.TP
.BR server
(on file level)
.br
Type: String
.br
Server that stores the file. If not given, server on source level is used.

.TP
.BR location
Type: String
.br
Path of the file on server.

.TP
.BR sha1
Type: String
.br
SHA-1 checksum of the file.

.TP
.BR sha256
Type: String
.br
SHA-256 checksum of the file.

.TP
.BR hashupdate
Type: Boolean
.br
Whether the checksum should be calculated on the fly.

.TP
.BR copy
Type: String
.br
In case string is a directory (ends on "/" or equals "." or ".."), the file is copied to that directory.
The name is left unchanged.
.br
In all other cases the string is used as new name for the file. The file is renamed.
.br
Directories are allowed in both cases and created on demand.
.br
Mutual exclusive to \fBpatch\fR and \fBunpack\fR.

.TP
.BR patch
Type: String
.br
The file is applied as a patch. The string is treated as an argument to the "-p"
argument. Mutual exclusive to \fBcopy\fR and \fBunpack\fR.

.TP
.BR unpack
Type: String
.br
The file is an archive (tarball) it is unpacked and a link pointing to the directory
defined in string is created. Name of the link equals  source-name. Mutual exclusive
to \fBcopy\fR and \fBpatch\fR.




.SH STRUCTURE (git)
The files have following structure if referring to git repositories:
.nf

e2source {
  licences = {
    "<string>",
    ...
  },
  env = {
    ["<variable name>"] = "<variable value>",
    ...
  },
  type = "git",
  server = "<string>",
  location = "<string>",
  branch = "<string>",
  tag = "<string>",
  working = "<string>",
}
.fi

.SH KEYS (git)

.TP
.BR licences
Type: Table of strings
.br
Name of the licence(s) that apply to the source.

.TP
.BR env
Type: Table
.br
List of environment variables and values separated by \fB=\fR. The variables are available during the build process.

.TP
.BR type
Type: String
.br
Defines the type of the source in case of git, always "git".

.TP
.BR server
.br
Type: String
.br
Name of the server the git repository is stored on.

.TP
.BR location
Type: String
.br
Path of the git repository on server.

.TP
.BR branch
Type: String
.br
Name of the git branch.

.TP
.BR tag
Type: String
.br
Name of the git tag.

.TP
.BR working
Type: String
.br
Path to the working directory.


.SH STRUCTURE (subversion)
The files have following structure if referring to subversion (svn) repositories:
.nf

e2source {
  licences = {
    "<string>",
    ...
  },
  env = {
    ["<variable name>"] = "<variable value>",
    ...
  },
  type = "svn",
  server = "<string>",
  location = "<string>",
  branch = "<string>",
  tag = "<string>",
  working = "<string>",
}
.fi

.SH KEYS (subversion)

.TP
.BR licences
Type: Table of strings
.br
Name of the licence(s) that apply to the source.

.TP
.BR env
Type: Table
.br
List of environment variables and values separated by \fB=\fR. The variables are available during the build process.

.TP
.BR type
Type: String
.br
Defines the type of the source in case of subversion, always "svn".

.TP
.BR server
.br
Type: String
.br
Name of the server the subversion repository is stored on.

.TP
.BR location
Type: String
.br
Path of the subversion repository on server.

.TP
.BR branch
Type: String
.br
Name of the subversion branch directory.

.TP
.BR tag
Type: String
.br
Name of the subversion tag directory.

.TP
.BR working
Type: String
.br
Path to the working directory.

.TP
.BR workingcopy_subdir
Type: String
.br
Path to the directory to be used in working copy mode.

.SH STRUCTURE (CVS)
The configuration for CVS repositories looks like this:

.nf
e2source {
  type = "cvs",
  licences = { "<string>", ...  },
  env = { ["<variable name>"] = "<variable value>", ...  },
  server = "<string>",
  cvsroot = "<string>",
  module = "<string>",
  tag = "<string>",
  branch = "<string>",
  working = "<string>",
}
.fi

.SH KEYS (CVS)

.TP
.BR licences
Type: Table of strings
.br
Name of the licence(s) that apply to the source.

.TP
.BR env
Type: Table
.br
List of environment variables and values separated by \fB=\fR.
The variables are available during the build process.

.TP
.BR type
Type: String
.br
Defines the type of the source. Always "cvs" for CVS sources.

.TP
.BR server
.br
Type: String
.br
Name of the server the CVS repository is stored on.

.TP
.BR cvsroot
Type: String
.br
Path to the CVS repository on the server.

.TP
.BR module
Type: String
.br
Name of the sub-directory in the CVS repository.

.TP
.BR tag
Type: String
.br
CVS revision or tag.

.TP
.BR branch
Type: String
.br
CVS branch.

.TP
.BR working
Type: String
.br
Path to the working directory.

.SH STRUCTURE (licence)

The special source of type "licence" provides licence files for selected sources
and results. In the build environment, the source creates a number of directories
and text files containing new-line separated entries. All requested licence texts
are copied into the build environment. The text files can be used to find
structure between results, sources, and licences.


.nf
e2source {
  type = "licence",
  results = { "res1", ... }
  sources = { "src1", ... }
}
.fi

Schematic example of a file tree produced by the above configuration:

.nf
<dir>/res/
<dir>/res/res1/sources
<dir>/src/
<dir>/src/src1/licences
<dir>/licences/
<dir>/licences/lic1/licence.txt
...
.fi

.SH KEYS (licence)

.TP
.BR results
.br
Type: table of strings
.br
Optional table filled with one or more result names. The results and
dependencies will be scanned for sources. Licences for all found sources are
provided to the build environment.

.TP
.BR sources
.br
Type: table of strings
.br
Optional table filled with one or more source names. The source names and their
licences will be provided to the build environment.

.SH "SEE ALSO"
.BR e2factory(1)
